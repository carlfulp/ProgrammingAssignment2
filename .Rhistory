setwd("C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data")
my_data<-read.csv("outcome-of-care-measures.csv", colClasses = "character", na.strings=c("NA","Not Available"))
my_rel_data<-my_data[,c(2,7,11,17,23)]
my_rel_data[,3]<-as.numeric(my_rel_data[,3])
my_rel_data[,4]<-as.numeric(my_rel_data[,4])
my_rel_data[,5]<-as.numeric(my_rel_data[,5])
my_rel_data[,2]<-as.factor(my_rel_data[,2])
my_HA_data<-my_rel_data[,c(1,2,3)]
my_HF_data<-my_rel_data[,c(1,2,4)]
my_PN_data<-my_rel_data[,c(1,2,5)]
my_HA_complete<-my_HA_data[complete.cases(my_HA_data),]
my_HF_complete<-my_HF_data[complete.cases(my_HF_data),]
my_PN_complete<-my_PN_data[complete.cases(my_PN_data),]
maxRows <- by(my_HA_complete, my_HA_complete$State, function(X) X[which.max(X$value),])
do.call("rbind", maxRows)
maxRows <- by(my_HA_complete, my_HA_complete$State, function(X) X[which.max(X$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack),])
do.call("rbind", maxRows)
View(my_HA_complete)
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
rankall("pneumonia", "worst")
rankall("fuck", "worst")
rankall("heart attack", "worst")
View(my_PN_complete)
rankall("heart attack", "worst")
rankall("heart attack", "worst")
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack", "worst")
rankall("heart failure", "worst")
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart failure", "worst")
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
tail(rankall("pneumonia", "worst"), 3)
Y<-my_HA_complete[ diff(c(0,my_HA_complete$State)) != 0, ]
View(Y)
?diff
Z<-my_HA_complete[ diff(c(0,my_HA_complete$State,2)) != 0, ]
View(Z)
source('C:/Users/Carl/Desktop/Coursera Data Science/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
source(makeVector.r)
setwd("~/GitHub/ProgrammingAssignment2")
source(makeVector.r)
source('~/GitHub/ProgrammingAssignment2/makeVector.r')
makeVector
x <- makeVector(1:5)
x
source('~/GitHub/ProgrammingAssignment2/cachemean.r')
cachemean(x)
x$get()
y<-cahcmean(x)
y<-cachemean(x)
y
source('~/GitHub/ProgrammingAssignment2/makeCacheMatrix.r')
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getInverse()
source('~/GitHub/ProgrammingAssignment2/makeCacheMatrix.r')
a$getInverse()
source('~/GitHub/ProgrammingAssignment2/makeCacheMatrix.r')
a$getInverse()
a$set(matrix(5:8,2))
a$get()
cacheSolve(a)
source('~/GitHub/ProgrammingAssignment2/cacheSolve.r')
cacheSolve(a)
solve(a)
a$getInverse()
a$setInverse()
class(a$getInverse)
source('~/GitHub/ProgrammingAssignment2/makeCacheMatrix.r')
a$getInverse()
source('~/GitHub/ProgrammingAssignment2/makeCacheMatrix.r')
a$getInverse()
source('~/GitHub/ProgrammingAssignment2/makeCacheMatrix.r')
a$getInverse()
source('~/GitHub/ProgrammingAssignment2/cacheSolve.r')
a$get()
a$set(c(4,5,6))
a$get()
source('~/GitHub/ProgrammingAssignment2/cacheSolve.r')
cacheSolve(a)
a <- makeCacheMatrix(matrix(1:4,2))
a$get()
a$getInverse()
a$set(matrix(5:8,2))
a$get()
cacheSolve(a)
cacheSolve(a)
a$getInverse()
b = a$getInverse()
a$get() %*% b
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
